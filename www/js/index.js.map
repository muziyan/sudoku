{"version":3,"sources":["webpack:///webpack/bootstrap 12a4caf3ae9647162a55","webpack:///./js/index.js","webpack:///./js/ui/grid.js","webpack:///./js/core/sudoku.js","webpack:///./js/core/generator.js","webpack:///./js/core/toolkit.js","webpack:///./js/core/checker.js","webpack:///./js/ui/popupnumbers.js"],"names":[],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,uBAAe;AACf;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;;;;;;ACtCA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,EAAC;AACD;AACA;AACA,EAAC;AACD;AACA;AACA,EAAC;AACD;AACA;AACA,EAAC;;;;;;;ACzBD;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;;;AAGb;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,mCAAkC,MAAM;AACxC,8CAA6C,UAAU;AACvD,cAAa;AACb;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAqB;AACrB;AACA;AACA,kBAAiB;AACjB,cAAa;;AAEb;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;;;;;;;;;ACrHA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA,G;;;;;;ACvBA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,wBAAuB,QAAQ;AAC/B;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,0BAAyB,OAAO;AAChC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;;;;;ACjEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA,4BAA2B,SAAS;AACpC,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA,wBAAuB,eAAe;AACtC;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;;AAEA;AACA;AACA,gBAAe,SAAS;AACxB;;AAEA,wBAAuB,OAAO;AAC9B;AACA;;AAEA;AACA;;;AAGA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA;AACA,gCAA+B,eAAe;AAC9C;AACA;AACA;AACA;;AAEA;AACA;;;AAGA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA,G;;;;;;ACnGA;;AAEA;AACA;AACA;AACA;;AAEA,oBAAmB,iBAAiB;;AAEpC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,4BAA2B,YAAY;AACvC;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,+BAA8B,cAAc;AAC5C;AACA;;AAEA,kCAAiC,yBAAyB;AAC1D;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,+BAA8B,cAAc;AAC5C;;AAEA,mCAAkC,cAAc;AAChD;AACA;;AAEA;AACA,mCAAkC,yBAAyB;AAC3D;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,+BAA8B,aAAa;AAC3C;AACA;;AAEA,oCAAmC,eAAe;AAClD;AACA,0BAAyB,kBAAkB;AAC3C;AACA;AACA;AACA;AACA;AACA;;;;;;;ACzGA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB;AACjB;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;AACA,kBAAiB;AACjB;AACA;AACA;AACA,cAAa;AACb;AACA;AACA,cAAa;AACb;AACA;AACA;AACA;AACA,UAAS;AACT;;AAEA;AACA;;AAEA,cAAa,UAAU;;AAEvB;;AAEA;AACA;AACA,0BAAyB,KAAK;AAC9B,yBAAwB,IAAI;AAC5B,cAAa;AACb;AACA;;AAEA;AACA;AACA;AACA,G","file":"index.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 12a4caf3ae9647162a55","const Grid = require(\"./ui/grid\");\nconst PopupNumber = require(\"./ui/popupnumbers\");\n\nconst grid = new Grid($(\"#container\"));\n\ngrid.build();\ngrid.layout();\n\nconst popupnumbers = new PopupNumber($(\"#popupNumbers\"));\ngrid.bindPopup(popupnumbers);\n\n$(\"#check\").on(\"click\",e=>{\n    if (grid.check()) {\n        alert(\"成功!\")\n        grid.rebuild();\n    }\n})\n$(\"#reset\").on(\"click\",e=>{\n    grid.reset();\n})\n$(\"#clear\").on(\"click\",e=>{\n    grid.clear();\n})\n$(\"#rebuild\").on(\"click\",e=>{\n    grid.rebuild();\n})\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./js/index.js\n// module id = 0\n// module chunks = 0","//生成九宫格\nconst Sudoku = require(\"../core/sudoku\");\nconst Checker = require(\"../core/checker\");\n\nmodule.exports = class Grid {\n    constructor(container) {\n        this._$container = container;\n    }\n\n    build() {\n        const sudoku = new Sudoku();\n        sudoku.make();\n\n        const win = sudoku.solutionMatrix;\n        console.log(win);\n        const matrix = sudoku.puzzleMatirx;\n\n        const rowGroupClasses = ['row_g_top', \"row_g_middle\", \"row_g_bottom\"];\n        const colGroupClasses = [\"col_g_left\", \"col_g_center\", \"col_g_right\"];\n\n        const $cells = matrix.map(rowValues => rowValues\n            .map((cellValue, colIndex) => {\n                return $(\"<span>\")\n                    .addClass(colGroupClasses[colIndex % 3])\n                    .addClass(cellValue ? \"fixed\" : \"empty\")\n                    .text(cellValue);\n            }));\n\n\n        const $divArray = $cells.map(($spanArray, rowIndex) => {\n            return $(\"<div class='row'>\")\n                .addClass(rowGroupClasses[rowIndex % 3])\n                .append($spanArray);\n        });\n\n        this._$container.append($divArray);\n    }\n\n    layout() {\n        const width = $(\"span:first\", this._$container).width();\n        $(\"span\", this._$container)\n            .height(width)\n            .css({\n                \"line-height\": `${width}px`,\n                \"font-size\": width < 32 ? `${width / 2}` : \"\"\n            })\n    }\n\n    /*\n    * 检查用户解密的结果,成功则进行提示,失败显示错误位置的标记\n    * */\n    check() {\n        //获取需要检查的数据\n        const data = this._$container.children()\n            .map((rowIndex, div) => {\n                return $(div).children()\n                    .map((colIndex, span) => parseInt($(span).text()) || 0);\n            })\n            .toArray()\n            .map($data => $data.toArray());\n\n        const checker = new Checker(data);\n\n        if (checker.check()){\n            return true;\n        }\n\n        //检查不成功,进行标记\n        const marks = checker.matrixMarks;\n\n        this._$container.children()\n            .each((rowIndex,div) =>{\n                $(div).children().each((colIndex,span)=>{\n                    const $span = $(span);\n                    if ($span.is('.fixed') || marks[rowIndex][colIndex]){\n                        $span.removeClass(\"error\");\n                    }else{\n                        $span.addClass(\"error\");\n                    }\n                })\n            })\n\n    }\n\n    /*\n    * 充值当前迷盘的初始装填\n    * */\n    reset() {\n        this._$container.find(\"span:not('.fixed')\")\n            .removeClass(\"error mark1 mark2\")\n            .addClass(\"empty\")\n            .text(0)\n    }\n\n    /*\n    * 清楚错误标记\n    * */\n    clear() {\n        this._$container.find(\"span.error\")\n            .removeClass(\"error\");\n    }\n\n    /*\n    *重建新的迷盘\n    * */\n    rebuild() {\n        this._$container.empty();\n        this.build();\n        this.layout();\n    }\n\n    bindPopup(popupNumbers) {\n        this._$container.on(\"click\", \"span\", e => {\n            const $cell = $(e.target);\n            if(!$cell.is(\".fixed\")) popupNumbers.popup($cell);\n        })\n    }\n};\n\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./js/ui/grid.js\n// module id = 1\n// module chunks = 0","//生成数独游戏\n//1.生成完成的解决方案\n//2.随机取出部分数据:按比例\n\nconst Generator = require(\"./generator\");\n\nmodule.exports = class Sudoku {\n    constructor(){\n        //生成完成的解决方案\n        const generator = new Generator();\n        generator.generate();\n        this.solutionMatrix = generator.matrix;\n    }\n\n    //随机去掉一部分数据\n    make(level = 5){\n        // const shouldRid = Math.random() * 9 < level;\n        //生成迷盘\n        this.puzzleMatirx = this.solutionMatrix.map(row => row.map( cell => {\n            return Math.random() * 9 < level ? 0 : cell;\n        }))\n\n    }\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./js/core/sudoku.js\n// module id = 2\n// module chunks = 0","//生成数独解决方案\nconst ToolKit = require(\"./toolkit\");\n\nmodule.exports = class Generator {\n\n    generate(){\n        while(!this.internalGenerate()){\n            console.warn(\"try again\");\n        }\n    }\n\n    internalGenerate(){\n        this.matrix = ToolKit.matrix.makeMatrix();\n        this.orders = ToolKit.matrix.makeMatrix()\n            .map( row => row.map((v,i)=> i))\n            .map(row => ToolKit.matrix.shuffle(row));\n\n        //TODO入口方法\n        for (let n = 1; n <= 9; n++){\n            if (!this.fillNumber(n)){\n                return false\n            }\n        }\n\n        return true;\n    }\n\n    fillNumber(n){\n        return this.fillRow(n,0)\n    }\n\n    fillRow(n,rowIndex){\n        if (rowIndex > 8){\n            return true;\n        }\n\n        const row = this.matrix[rowIndex];\n        const orders = this.orders[rowIndex];\n\n        //TODO随机选择列\n        for (let i  =  0; i < 9; i++){\n            const colIndex = orders[i];\n            //如果这个位置有值，跳过\n            if (row[colIndex]){\n                continue;\n            }\n\n            //检查这个位置是否可以填n\n            if (!ToolKit.matrix.checkFillable(this.matrix,n,rowIndex,colIndex)){\n                continue;\n            }\n\n            row[colIndex] = n;\n\n            //去下一行填写n，如果没填进去，就继续寻当前航下一个位置\n            if (!this.fillRow(n,rowIndex +1)){\n                row[colIndex] = 0;\n                continue;\n            }\n\n            return  true;\n        }\n\n        return false;\n    }\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./js/core/generator.js\n// module id = 3\n// module chunks = 0","/*\n* 矩阵\n* */\nconst matrixToolkit = {\n\n    makeRow(v = 0) {\n        const array = new Array(9);\n        array.fill(v);\n        return array;\n    },\n\n    makeMatrix(v = 0) {\n        return Array.from({length:9},()=> this.makeRow(v))\n    },\n\n    /*\n    * Fisher-Yates 洗牌算法\n    * */\n    shuffle(array) {\n        const endIndex = array.length - 2;\n        for (let i = 0; i <= endIndex; i++) {\n            const j = i + Math.floor(Math.random() * (array.length - i));\n            [array[i], array[j]] = [array[j], array[i]]\n        }\n        return array;\n    },\n\n    /*\n    * TODO 检查指定位置是否可以填\n    * */\n    checkFillable(matrix,n,rowIndex,colIndex){\n\n        const row = matrix[rowIndex];\n        const col = this.makeRow().map((v,i) => matrix[i][colIndex]);\n        const {boxIndex} = boxToolkit.convertToBoxIndex(rowIndex,colIndex);\n        const box = boxToolkit.getBoxCells(matrix,boxIndex);\n\n        for (let i = 0; i < 9; i++){\n            if (row[i] === n || col[i] === n || box[i] === n) return  false;\n        }\n\n        return true;\n    }\n\n\n};\n\n\n/*\n* 宫坐标系工具\n* */\n//工具集\nconst boxToolkit = {\n    convertToBoxIndex(rowIndex,colIndex){\n        return{\n            boxIndex:Math.floor(rowIndex /3) * 3 + Math.floor(colIndex / 3),\n            cellIndex:rowIndex % 3 * 3 + colIndex % 3\n        }\n    },\n\n    convertFromBoxIndex(boxIndex,cellIndex){\n        return {\n            rowIndex:Math.floor(boxIndex / 3) * 3 + Math.floor(cellIndex / 3),\n            colIndex:boxIndex % 3 * 3 + cellIndex % 3\n        }\n    },\n\n    getBoxCells(matrix,boxIndex){\n        const startRowIndex = Math.floor(boxIndex / 3) * 3;\n        const startColIndex = boxIndex % 3 * 3;\n        const result = [];\n        for (let cellIndex = 0; cellIndex < 9; cellIndex++){\n            const rowIndex = startRowIndex + Math.floor(cellIndex / 3);\n            const colIndex = startColIndex + cellIndex % 3;\n            result.push(matrix[rowIndex][colIndex]);\n        }\n\n        return result;\n    }\n\n\n};\n\n\nmodule.exports = class Toolkit{\n    /*\n    * 矩阵和数据相关的工具\n    * */\n    static get matrix(){\n        return matrixToolkit;\n    }\n\n\n    /*\n    * 宫坐标系的相关工具\n    * */\n    static get box(){\n        return boxToolkit;\n    }\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./js/core/toolkit.js\n// module id = 4\n// module chunks = 0","//检查数据解决方案\n\nfunction checkArray(array) {\n    const length = array.length;\n    const marks = new Array(length);\n    marks.fill(true);\n\n    for (let i = 0; i < length -  1; i++){\n\n        if (!marks[i]){\n            continue;\n        }\n\n        const v = array[i];\n        //是否有效 0 => 无效 1-9 => 有效\n        if (!v){\n            marks[i] = false;\n            continue;\n        }\n\n        //是否有重复：i + 1 ~ 9，是否和i位置的数据重复\n        for (let j = i + 1; j < length; j++){\n            if (v === array[j]){\n                marks[i] = marks[j] = false;\n            }\n        }\n\n    }\n\n    return marks;\n}\n\nconst ToolKit = require(\"./toolkit\");\n\n//输入：matrix 用户完成的数独数据 9 * 9\n//处理:对matrix 行 列宫 进行检查，并填写marks\n//输出：检查是否成功 marks\nmodule.exports = class Checker {\n    constructor(matrix){\n        this._matrix = matrix;\n        this._matrixMarks = ToolKit.matrix.makeMatrix(true);\n    }\n\n    get matrixMarks(){\n        return this._matrixMarks;\n    }\n\n    get isSuccess(){\n        return this._success;\n    }\n\n\n    check(){\n        this.checkRows();\n        this.checkCols();\n        this.checkBoxes();\n\n        //检测是否成功\n        this._success = this._matrixMarks.every(row => row.every( mark => mark));\n        return this._success;\n    }\n\n    checkRows(){\n        for (let rowIndex = 0; rowIndex < 9; rowIndex++){\n            const row = this._matrix[rowIndex];\n            const marks = checkArray(row);\n\n            for(let colIndex = 0; colIndex < marks.length; colIndex++){\n                if (!marks[colIndex]){\n                    this._matrixMarks[rowIndex][colIndex] = false;\n                }\n            }\n        }\n    }\n\n    checkCols(){\n        for (let colIndex = 0; colIndex < 9; colIndex++){\n            const cols = [];\n\n            for (let rowIndex = 0; rowIndex < 9; rowIndex++){\n                cols[rowIndex] = this._matrix[rowIndex][colIndex];\n            }\n\n            const marks = checkArray(cols);\n            for (let rowIndex = 0; rowIndex < marks.length; rowIndex++){\n                if (!marks[rowIndex]){\n                    this._matrixMarks[rowIndex][colIndex] = false;\n                }\n            }\n        }\n    }\n\n    checkBoxes(){\n        for (let boxIndex = 0;boxIndex < 9; boxIndex++){\n            const boxes = ToolKit.box.getBoxCells(this._matrix,boxIndex);\n            const marks = checkArray(boxes);\n\n            for (let cellIndex = 0; cellIndex < 9; cellIndex++){\n                if (!marks[cellIndex]){\n                    let {rowIndex,colIndex} = ToolKit.box.convertFromBoxIndex(boxIndex,cellIndex);\n                    this._matrixMarks[rowIndex][colIndex] = false;\n                }\n            }\n        }\n    }\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./js/core/checker.js\n// module id = 5\n// module chunks = 0","//处理弹出的操作面板\n\nmodule.exports = class Popupnumbers {\n    constructor($panel) {\n        this._$panel = $panel.hide().removeClass(\"hidden\");\n\n        this._$panel.on(\"click\",\"span\", e =>{\n            const $cell = this._$targetCell;\n            let $span = $(e.target);\n            if ($span.hasClass('mark1')){\n                //回填样式\n                if ($cell.hasClass(\"mark1\")){\n                    $cell.removeClass(\"mark1\")\n                }else{\n                    $cell.removeClass(\"mark2\")\n                    $cell.addClass(\"mark1\")\n                }\n            }else if ($span.hasClass('mark2')){\n                //回填样式\n                if ($cell.hasClass(\"mark2\")){\n                    $cell.removeClass(\"mark2\")\n                }else{\n                    $cell.removeClass(\"mark1\")\n                    $cell.addClass(\"mark2\")\n                }\n            }else if ($span.hasClass(\"empty\")){\n                 $cell.text(0)\n                     .addClass(\"empty\");\n            }else{\n                $cell.removeClass(\"empty\")\n                    .text($span.text());\n            }\n            this.hide();\n        })\n    }\n\n    popup($cell) {\n        this._$targetCell = $cell;\n\n        let {left, top} = $cell.position();\n\n        left = left > 300 ? 200 : left;\n\n        this._$panel\n            .css({\n                left: `${left}px`,\n                top: `${top}px`,\n            })\n            .show();\n    }\n\n    hide(){\n        this._$panel.hide();\n    }\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./js/ui/popupnumbers.js\n// module id = 6\n// module chunks = 0"],"sourceRoot":""}